# Function to generate HTML table for folder sizes
function Generate-FolderSizeHTMLTable {
    param (
        [string]$folderName,
        [int]$totalSizeKB,
        [hash]$subfolderSizes
    )

    $htmlTable = "<h2>$folderName Folder Size</h2>"
    $htmlTable += "<table border='1'><tr><th>Subfolder</th><th>Size (KB)</th></tr>"

    foreach ($subfolder in $subfolderSizes.Keys) {
        $sizeInKB = [math]::Ceiling($subfolderSizes[$subfolder] / 1KB)
        $htmlTable += "<tr><td>$subfolder</td><td>$sizeInKB KB</td></tr>"
    }

    $htmlTable += "<tr><td>Total Size</td><td>$totalSizeKB KB</td></tr>"
    $htmlTable += "</table>"
    return $htmlTable
}

# ... (rest of the script)

# Generate HTML tables for folder sizes
$htmlFolderSizeTableFolder1 = Generate-FolderSizeHTMLTable -folderName "Folder 1" -totalSizeKB ($totalSizeFolder1 / 1KB) -subfolderSizes $subfolderSizesFolder1
$htmlFolderSizeTableFolder2 = Generate-FolderSizeHTMLTable -folderName "Folder 2" -totalSizeKB ($totalSizeFolder2 / 1KB) -subfolderSizes $subfolderSizesFolder2

# ... (rest of the script)

# Generate HTML report
$htmlReport = @"
<!DOCTYPE html>
<html>
<head>
    <title>File Information Report</title>
</head>
<body>
    $htmlTableFolder1
    <p>Total Size for Folder 1: $($totalSizeFolder1 / 1KB) KB</p>
    $htmlTableSubfoldersFolder1
    $htmlFolderSizeTableFolder1
    $htmlTableFolder2
    <p>Total Size for Folder 2: $($totalSizeFolder2 / 1KB) KB</p>
    $htmlTableSubfoldersFolder2
    $htmlFolderSizeTableFolder2
</body>
</html>
"@

# ... (rest of the script)
