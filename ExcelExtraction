using System;
using System.IO;
using OfficeOpenXml;

class Program
{
    static void Main()
    {
        // Specify the path to the Excel file containing folder paths and file names
        string excelFilePath = @"C:\Path\To\Your\Excel\File.xlsx";

        // Load Excel package
        using (var package = new ExcelPackage(new FileInfo(excelFilePath)))
        {
            // Assume the folder path and file names are in the first worksheet, in columns A and B
            ExcelWorksheet worksheet = package.Workbook.Worksheets[0];

            // Iterate through the rows in the Excel sheet
            for (int row = 2; row <= worksheet.Dimension.Rows; row++) // Assuming the header is in the first row
            {
                string folderPath = worksheet.Cells[row, 1].Text;
                string fileName = worksheet.Cells[row, 2].Text;

                // Combine the path and file name
                string filePath = Path.Combine(folderPath, fileName);

                // Check if the file exists
                if (File.Exists(filePath))
                {
                    // Get file size in bytes
                    long fileSizeBytes = new FileInfo(filePath).Length;

                    // Convert bytes to kilobytes and round to the nearest whole number
                    int fileSizeKB = (int)Math.Round(fileSizeBytes / 1024.0);

                    if (fileSizeKB > 0)
                    {
                        Console.WriteLine($"File '{filePath}' has data. File Size: {fileSizeKB} KB");
                    }
                    else
                    {
                        Console.WriteLine($"File '{filePath}' is empty.");
                    }
                }
                else
                {
                    Console.WriteLine($"File '{fileName}' does not exist in the specified path '{folderPath}'.");
                }
            }
        }
    }
}

//version 2
using System;
using System.Data.OleDb;
using System.IO;

class Program
{
    static void Main()
    {
        // Specify the path to the Excel file containing folder paths and file names
        string excelFilePath = @"C:\Path\To\Your\Excel\File.xlsx";

        // Connection string for Excel (assuming Excel 2007 and later format)
        string connectionString = $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={excelFilePath};Extended Properties='Excel 12.0 Xml;HDR=YES';";

        // Query to select data from the Excel sheet
        string query = "SELECT * FROM [Sheet1$]";

        // Create the OleDbConnection and OleDbCommand objects
        using (OleDbConnection connection = new OleDbConnection(connectionString))
        using (OleDbCommand command = new OleDbCommand(query, connection))
        {
            try
            {
                // Open the connection
                connection.Open();

                // Execute the query
                using (OleDbDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        // Assuming the folder path is in the first column and file name is in the second column
                        string folderPath = reader[0].ToString();
                        string fileName = reader[1].ToString();

                        // Combine the path and file name
                        string filePath = Path.Combine(folderPath, fileName);

                        // Check if the file exists
                        if (File.Exists(filePath))
                        {
                            // Get file size in bytes
                            long fileSizeBytes = new FileInfo(filePath).Length;

                            // Convert bytes to kilobytes and round to the nearest whole number
                            int fileSizeKB = (int)Math.Round(fileSizeBytes / 1024.0);

                            if (fileSizeKB > 0)
                            {
                                Console.WriteLine($"File '{filePath}' has data. File Size: {fileSizeKB} KB");
                            }
                            else
                            {
                                Console.WriteLine($"File '{filePath}' is empty.");
                            }
                        }
                        else
                        {
                            Console.WriteLine($"File '{fileName}' does not exist in the specified path '{folderPath}'.");
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
        }
    }
}

//version3
using System;
using System.IO;
using ClosedXML.Excel;

class Program
{
    static void Main()
    {
        // Specify the path to the Excel file containing folder paths and file names
        string excelFilePath = @"C:\Path\To\Your\Excel\File.xlsx";

        try
        {
            // Open the Excel workbook
            using (var workbook = new XLWorkbook(excelFilePath))
            {
                // Get the first worksheet
                var worksheet = workbook.Worksheet(1);

                // Iterate through the rows
                foreach (var row in worksheet.RowsUsed().Skip(1)) // Skip the header row
                {
                    // Get folder path and file name from Excel cells
                    string folderPath = row.Cell(1).GetString();
                    string fileName = row.Cell(2).GetString();

                    // Combine the path and file name
                    string filePath = Path.Combine(folderPath, fileName);

                    // Check if the file exists
                    if (File.Exists(filePath))
                    {
                        // Get file size in bytes
                        long fileSizeBytes = new FileInfo(filePath).Length;

                        // Convert bytes to kilobytes and round to the nearest whole number
                        int fileSizeKB = (int)Math.Round(fileSizeBytes / 1024.0);

                        if (fileSizeKB > 0)
                        {
                            Console.WriteLine($"File '{filePath}' has data. File Size: {fileSizeKB} KB");
                        }
                        else
                        {
                            Console.WriteLine($"File '{filePath}' is empty.");
                        }
                    }
                    else
                    {
                        Console.WriteLine($"File '{fileName}' does not exist in the specified path '{folderPath}'.");
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}

