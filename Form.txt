Form1.cs
using System;
using System.Windows.Forms;

namespace SignInApp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnLogin_Click(object sender, EventArgs e)
        {
            string username = txtUsername.Text;
            string password = txtPassword.Text;

            // For demonstration purposes, using hardcoded username and password.
            // In a real application, you should authenticate against a database or other user store.
            if (username == "admin" && password == "password")
            {
                MessageBox.Show("Login successful!", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            else
            {
                MessageBox.Show("Invalid username or password.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}




Form1.Designer.cs
namespace SignInApp
{
    partial class Form1
    {
        private System.ComponentModel.IContainer components = null;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox txtUsername;
        private System.Windows.Forms.TextBox txtPassword;
        private System.Windows.Forms.Button btnLogin;

        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        private void InitializeComponent()
        {
            this.label1 = new System.Windows.Forms.Label();
            this.label2 = new System.Windows.Forms.Label();
            this.txtUsername = new System.Windows.Forms.TextBox();
            this.txtPassword = new System.Windows.Forms.TextBox();
            this.btnLogin = new System.Windows.Forms.Button();
            this.SuspendLayout();

            // 
            // label1
            // 
            this.label1.AutoSize = true;
            this.label1.Location = new System.Drawing.Point(12, 15);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(55, 13);
            this.label1.TabIndex = 0;
            this.label1.Text = "Username";
            
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.Location = new System.Drawing.Point(12, 41);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(53, 13);
            this.label2.TabIndex = 1;
            this.label2.Text = "Password";
            
            // 
            // txtUsername
            // 
            this.txtUsername.Location = new System.Drawing.Point(73, 12);
            this.txtUsername.Name = "txtUsername";
            this.txtUsername.Size = new System.Drawing.Size(199, 20);
            this.txtUsername.TabIndex = 2;

            // 
            // txtPassword
            // 
            this.txtPassword.Location = new System.Drawing.Point(73, 38);
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.PasswordChar = '*';
            this.txtPassword.Size = new System.Drawing.Size(199, 20);
            this.txtPassword.TabIndex = 3;

            // 
            // btnLogin
            // 
            this.btnLogin.Location = new System.Drawing.Point(197, 64);
            this.btnLogin.Name = "btnLogin";
            this.btnLogin.Size = new System.Drawing.Size(75, 23);
            this.btnLogin.TabIndex = 4;
            this.btnLogin.Text = "Login";
            this.btnLogin.UseVisualStyleBackColor = true;
            this.btnLogin.Click += new System.EventHandler(this.btnLogin_Click);

            // 
            // Form1
            // 
            this.ClientSize = new System.Drawing.Size(284, 101);
            this.Controls.Add(this.btnLogin);
            this.Controls.Add(this.txtPassword);
   this.Controls.Add(this.txtUsername);
            this.Controls.Add(this.label2);

            this.Controls.Add(this.label1);
            this.Name = "Form1";
            this.Text = "Sign In";
            this.ResumeLayout(false);
            this.PerformLayout();
        }
    }
}
July 23
windows form.designer.cs
namespace LoginApp
{
    partial class LoginForm
    {
        private System.ComponentModel.IContainer components = null;

        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        private void InitializeComponent()
        {
            this.usernameLabel = new System.Windows.Forms.Label();
            this.passwordLabel = new System.Windows.Forms.Label();
            this.usernameTextBox = new System.Windows.Forms.TextBox();
            this.passwordTextBox = new System.Windows.Forms.TextBox();
            this.loginButton = new System.Windows.Forms.Button();
            this.messageLabel = new System.Windows.Forms.Label(); // Ensure this line is present
            this.SuspendLayout();
            // 
            // usernameLabel
            // 
            this.usernameLabel.AutoSize = true;
            this.usernameLabel.Location = new System.Drawing.Point(50, 50);
            this.usernameLabel.Name = "usernameLabel";
            this.usernameLabel.Size = new System.Drawing.Size(75, 17);
            this.usernameLabel.TabIndex = 0;
            this.usernameLabel.Text = "Username:";
            // 
            // passwordLabel
            // 
            this.passwordLabel.AutoSize = true;
            this.passwordLabel.Location = new System.Drawing.Point(50, 100);
            this.passwordLabel.Name = "passwordLabel";
            this.passwordLabel.Size = new System.Drawing.Size(73, 17);
            this.passwordLabel.TabIndex = 1;
            this.passwordLabel.Text = "Password:";
            // 
            // usernameTextBox
            // 
            this.usernameTextBox.Location = new System.Drawing.Point(150, 50);
            this.usernameTextBox.Name = "usernameTextBox";
            this.usernameTextBox.Size = new System.Drawing.Size(200, 22);
            this.usernameTextBox.TabIndex = 2;
            // 
            // passwordTextBox
            // 
            this.passwordTextBox.Location = new System.Drawing.Point(150, 100);
            this.passwordTextBox.Name = "passwordTextBox";
            this.passwordTextBox.Size = new System.Drawing.Size(200, 22);
            this.passwordTextBox.TabIndex = 3;
            this.passwordTextBox.UseSystemPasswordChar = true;
            // 
            // loginButton
            // 
            this.loginButton.Location = new System.Drawing.Point(150, 150);
            this.loginButton.Name = "loginButton";
            this.loginButton.Size = new System.Drawing.Size(75, 23);
            this.loginButton.TabIndex = 4;
            this.loginButton.Text = "Login";
            this.loginButton.UseVisualStyleBackColor = true;
            this.loginButton.Click += new System.EventHandler(this.LoginButton_Click);
            // 
            // messageLabel
            // 
            this.messageLabel.AutoSize = true;
            this.messageLabel.Location = new System.Drawing.Point(150, 200);
            this.messageLabel.Name = "messageLabel";
            this.messageLabel.Size = new System.Drawing.Size(0, 17);
            this.messageLabel.TabIndex = 5;
            // 
            // LoginForm
            // 
            this.ClientSize = new System.Drawing.Size(400, 250);
            this.Controls.Add(this.messageLabel); // Ensure this line is present
            this.Controls.Add(this.loginButton);
            this.Controls.Add(this.passwordTextBox);
            this.Controls.Add(this.usernameTextBox);
            this.Controls.Add(this.passwordLabel);
            this.Controls.Add(this.usernameLabel);
            this.Name = "LoginForm";
            this.Text = "Login";
            this.ResumeLayout(false);
            this.PerformLayout();
        }

        private System.Windows.Forms.Label usernameLabel;
        private System.Windows.Forms.Label passwordLabel;
        private System.Windows.Forms.TextBox usernameTextBox;
        private System.Windows.Forms.TextBox passwordTextBox;
        private System.Windows.Forms.Button loginButton;
        private System.Windows.Forms.Label messageLabel;
    }
}



Login form.cs
using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Newtonsoft.Json;

namespace LoginApp
{
    public partial class LoginForm : Form
    {
        public LoginForm()
        {
            InitializeComponent();
        }

        private async void LoginButton_Click(object sender, EventArgs e)
        {
            string username = usernameTextBox.Text;
            string password = passwordTextBox.Text;

            if (string.IsNullOrEmpty(username))
            {
                messageLabel.Text = "Username is required";
                return;
            }
            else if (username.Length < 7)
            {
                messageLabel.Text = "Username should contain at least 7 characters";
                return;
            }

            if (string.IsNullOrEmpty(password))
            {
                messageLabel.Text = "Password is required";
                return;
            }
            else if (password.Length < 8 || password.Length > 18)
            {
                messageLabel.Text = "Password should be between 8 and 18 characters";
                return;
            }

            var decryptedUsername = DecryptStringAES(username);
            var decryptedPassword = DecryptStringAES(password);

            try
            {
                using (HttpClient client = new HttpClient())
                {
                    string mergedCredentials = decryptedUsername + ":" + decryptedPassword;
                    byte[] byteCredentials = Encoding.UTF8.GetBytes(mergedCredentials);
                    string encodedCredentials = Convert.ToBase64String(byteCredentials);

                    client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", encodedCredentials);

                    string repoApiUrl = "https://SCM.com/" + "YourProjectName";
                    HttpResponseMessage response = await client.GetAsync(repoApiUrl);

                    if (!response.IsSuccessStatusCode)
                    {
                        if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
                        {
                            messageLabel.Text = "Unauthorized! You are not permitted to access this site";
                        }
                        else
                        {
                            messageLabel.Text = "Login failed!";
                        }
                    }
                    else
                    {
                        string userInfoUrl = "https://SCM.com/" + decryptedUsername;
                        HttpResponseMessage userInfoResponse = await client.GetAsync(userInfoUrl);

                        string userInfoJson = await userInfoResponse.Content.ReadAsStringAsync();
                        var userInfo = JsonConvert.DeserializeObject<UserInfo>(userInfoJson);

                        // Handle successful login
                        messageLabel.Text = "Login successful!";
                        // Redirect to another form or perform further actions
                    }
                }
            }
            catch (Exception ex)
            {
                messageLabel.Text = "An error occurred: " + ex.Message;
            }
        }

        private string DecryptStringAES(string encryptedString)
        {
            // Add your decryption logic here
            return encryptedString; // Placeholder
        }
    }

    public class UserInfo
    {
        public string displayName { get; set; }
    }
}

//version 2
using System;
using System.IO;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Newtonsoft.Json;

namespace LoginApp
{
    public partial class LoginForm : Form
    {
        public LoginForm()
        {
            InitializeComponent();
        }

        private async void LoginButton_Click(object sender, EventArgs e)
        {
            string username = usernameTextBox.Text;
            string password = passwordTextBox.Text;

            if (string.IsNullOrEmpty(username))
            {
                messageLabel.Text = "Username is required";
                return;
            }
            else if (username.Length < 7)
            {
                messageLabel.Text = "Username should contain at least 7 characters";
                return;
            }

            if (string.IsNullOrEmpty(password))
            {
                messageLabel.Text = "Password is required";
                return;
            }
            else if (password.Length < 8 || password.Length > 18)
            {
                messageLabel.Text = "Password should be between 8 and 18 characters";
                return;
            }

            var decryptedUsername = DecryptStringAES(username);
            var decryptedPassword = DecryptStringAES(password);

            try
            {
                using (HttpClient client = new HttpClient())
                {
                    string mergedCredentials = decryptedUsername + ":" + decryptedPassword;
                    byte[] byteCredentials = Encoding.UTF8.GetBytes(mergedCredentials);
                    string encodedCredentials = Convert.ToBase64String(byteCredentials);

                    client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", encodedCredentials);

                    string repoApiUrl = "https://SCM.com/" + "YourProjectName";
                    HttpResponseMessage response = await client.GetAsync(repoApiUrl);

                    if (!response.IsSuccessStatusCode)
                    {
                        if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
                        {
                            messageLabel.Text = "Unauthorized! You are not permitted to access this site";
                        }
                        else
                        {
                            messageLabel.Text = "Login failed!";
                        }
                    }
                    else
                    {
                        string userInfoUrl = "https://SCM.com/" + decryptedUsername;
                        HttpResponseMessage userInfoResponse = await client.GetAsync(userInfoUrl);

                        string userInfoJson = await userInfoResponse.Content.ReadAsStringAsync();
                        var userInfo = JsonConvert.DeserializeObject<UserInfo>(userInfoJson);

                        // Handle successful login
                        messageLabel.Text = "Login successful!";
                        // Redirect to another form or perform further actions
                    }
                }
            }
            catch (Exception ex)
            {
                messageLabel.Text = "An error occurred: " + ex.Message;
            }
        }

        private static string DecryptStringFromBytes(byte[] cipherText, byte[] key, byte[] iv)
        {
            if (cipherText == null || cipherText.Length <= 0)
            {
                throw new ArgumentNullException(nameof(cipherText));
            }
            if (key == null || key.Length <= 0)
            {
                throw new ArgumentNullException(nameof(key));
            }
            if (iv == null || iv.Length <= 0)
            {
                throw new ArgumentNullException(nameof(iv));
            }

            string plaintext = null;
            using (var rijAlg = new RijndaelManaged())
            {
                rijAlg.Mode = CipherMode.CBC;
                rijAlg.Padding = PaddingMode.PKCS7;
                rijAlg.FeedbackSize = 128;
                rijAlg.Key = key;
                rijAlg.IV = iv;
                var decrypter = rijAlg.CreateDecryptor(rijAlg.Key, rijAlg.IV);

                try
                {
                    using (var msDecrypt = new MemoryStream(cipherText))
                    {
                        using (var csDecrypt = new CryptoStream(msDecrypt, decrypter, CryptoStreamMode.Read))
                        {
                            using (var srDecrypt = new StreamReader(csDecrypt))
                            {
                                plaintext = srDecrypt.ReadToEnd();
                            }
                        }
                    }
                }
                catch (Exception)
                {
                    plaintext = "keyError";
                }
            }
            return plaintext;
        }

        public static string DecryptStringAES(string cipherText)
        {
            var keybytes = Encoding.UTF8.GetBytes("8080808080808080");
            var iv = Encoding.UTF8.GetBytes("8080808080808080");
            var encrypted = Convert.FromBase64String(cipherText);
            var decryptedFromJavascript = DecryptStringFromBytes(encrypted, keybytes, iv);
            return string.Format(decryptedFromJavascript);
        }
    }

    public class UserInfo
    {
        public string displayName { get; set; }
    }
}

Full Login Form.cs
using System;
using System.IO;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Newtonsoft.Json;
using System.Configuration;
using System.Collections.Specialized;

namespace LoginApp
{
    public partial class LoginForm : Form
    {
        public LoginForm()
        {
            InitializeComponent();
        }

        private async void LoginButton_Click(object sender, EventArgs e)
        {
            string username = usernameTextBox.Text;
            string password = passwordTextBox.Text;

            if (string.IsNullOrEmpty(username))
            {
                messageLabel.Text = "Username is required";
                return;
            }
            else if (username.Length < 7)
            {
                messageLabel.Text = "Username should contain at least 7 characters";
                return;
            }

            if (string.IsNullOrEmpty(password))
            {
                messageLabel.Text = "Password is required";
                return;
            }
            else if (password.Length < 8 || password.Length > 18)
            {
                messageLabel.Text = "Password should be between 8 and 18 characters";
                return;
            }

            try
            {
                using (HttpClient client = new HttpClient())
                {
                    string mergedCredentials = username + ":" + password;
                    byte[] byteCredentials = Encoding.UTF8.GetBytes(mergedCredentials);
                    string encodedCredentials = Convert.ToBase64String(byteCredentials);

                    client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", encodedCredentials);

                    NameValueCollection appSettings = ConfigurationManager.AppSettings;

                    if (appSettings == null)
                    {
                        messageLabel.Text = "App settings are not configured properly.";
                        return;
                    }

                    string projectName = appSettings["projects"];

                    if (string.IsNullOrEmpty(projectName))
                    {
                        messageLabel.Text = "Project name is not configured.";
                        return;
                    }

                    string repoApiUrl = "https://SCM.com/" + projectName;
                    HttpResponseMessage response = await client.GetAsync(repoApiUrl);

                    if (!response.IsSuccessStatusCode)
                    {
                        if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
                        {
                            messageLabel.Text = "Unauthorized! You are not permitted to access this site";
                        }
                        else
                        {
                            messageLabel.Text = "Login failed!";
                        }
                    }
                    else
                    {
                        string userInfoUrl = "https://SCM.com/" + username;
                        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", encodedCredentials);
                        HttpResponseMessage userInfoResponse = await client.GetAsync(userInfoUrl);

                        string userInfoJson = await userInfoResponse.Content.ReadAsStringAsync();
                        var userInfo = JsonConvert.DeserializeObject<UserInfo>(userInfoJson);

                        // Handle successful login
                        messageLabel.Text = "Login successful!";
                        userInfoLabel.Text = $"Welcome, {userInfo.displayName}";

                        // Navigate to the next form or perform further actions
                        // Example: new MainForm().Show();
                        // this.Hide();
                    }
                }
            }
            catch (Exception ex)
            {
                messageLabel.Text = "An error occurred: " + ex.Message;
            }
        }
    }

    public class UserInfo
    {
        public string displayName { get; set; }
    }
}


